# Generated by Django 3.2.9 on 2021-12-16 04:31

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import homepage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('building_name', models.CharField(help_text='The building name', max_length=255)),
                ('no_of_floors', models.IntegerField(help_text='Number of floors of the building')),
                ('no_of_Room', models.IntegerField(help_text='Number of rooms in the whole building')),
                ('location_name', models.CharField(help_text='The location name of the building', max_length=255)),
                ('address', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('parking_space', models.CharField(help_text='The parking size of the building example 10000 sqm', max_length=255)),
                ('security', models.BooleanField(default=False, help_text='if true means the building has security example: cctv,guars')),
                ('tv_connection', models.BooleanField(default=False, help_text='if true the building has tv connections cables')),
                ('account_number', models.CharField(help_text='The account number for rent payment for the building', max_length=255)),
                ('owner', models.CharField(help_text='The name of the owner of the building', max_length=255)),
                ('payment_deadline', models.DateField(help_text='The payment deadline when rent is due')),
                ('penalties', models.CharField(help_text='penalties for late rent payment', max_length=255)),
                ('building_main_pic', models.ImageField(help_text='The building picture', upload_to=homepage.models.upload_image_path)),
                ('approved', models.BooleanField(default=False, help_text='This helps us to know if the building can appear on site or not ')),
                ('agent', models.ForeignKey(help_text='This email of the agent', on_delete=django.db.models.deletion.CASCADE, to='account.agent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room_name', models.CharField(help_text='The name of the room or house number example AB1', max_length=255)),
                ('room_type', models.CharField(choices=[('SINGLE', 'Single Room'), ('DOUBLE', 'Bouble Room'), ('BEDSITTER', 'BedSitter'), ('ONEBEDROOM', '1 Bedroom'), ('TWOBEDROOM', '2 Bedroom'), ('THREEBEDROOM', '3 Bedroom'), ('FOURBEDROOM', '4 Bedroom')], help_text='The type of the room example single room', max_length=50)),
                ('rent', models.DecimalField(decimal_places=2, help_text='The total amount of rent per month', max_digits=20)),
                ('deposit', models.DecimalField(decimal_places=2, help_text='The total first time deposite exclusive of the rent', max_digits=20)),
                ('floor', models.IntegerField(help_text='The floor number of the room ')),
                ('bathtab_np', models.IntegerField(help_text='The number of bathtab for the room if non input 0 ')),
                ('balcony', models.BooleanField(default=False, help_text='if true means the room has a balcony ')),
                ('room_size', models.CharField(help_text='The total area in room example 1000sqm ', max_length=255)),
                ('room_picture', models.ImageField(help_text='The picture of the room ', upload_to=homepage.models.upload_image_path)),
                ('approved', models.BooleanField(default=False, help_text='if true means the room can appear on site ')),
                ('building', models.ForeignKey(help_text='The building name', on_delete=django.db.models.deletion.CASCADE, to='homepage.building')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SlidingImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('images', models.ImageField(upload_to=homepage.models.upload_image_path)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RoomMorePic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(help_text='More pictures of the room ', upload_to=homepage.models.upload_image_path)),
                ('room_id', models.ForeignKey(help_text='The room name', on_delete=django.db.models.deletion.CASCADE, to='homepage.room')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=20)),
                ('payment_status', models.BooleanField(default=False)),
                ('payment_type', models.CharField(max_length=255)),
                ('booking_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepage.building')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BuildingMorePic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to=homepage.models.upload_image_path)),
                ('building_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='homepage.building')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking_status', models.BooleanField(default=False, help_text='if true it means the room is paid for and hence considered booked ')),
                ('building', models.ForeignKey(help_text='The  name of the building ', on_delete=django.db.models.deletion.CASCADE, to='homepage.building')),
                ('property_manager', models.ForeignKey(help_text='The property manager for the buidling', on_delete=django.db.models.deletion.CASCADE, to='account.agent')),
                ('room', models.ForeignKey(help_text='The room name ', on_delete=django.db.models.deletion.CASCADE, to='homepage.room')),
                ('user', models.ForeignKey(blank=True, help_text='The user id for the building ', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
